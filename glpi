#!/usr/bin/env php
<?php

require __DIR__.'/vendor/autoload.php';

define("MIGRATIONS_PATH", __DIR__."/app/database/migrations");
define("SEEDS_PATH", __DIR__."/app/database/seeds");
define("INSTALL_PATH", __DIR__."/app/database");

/**
 * Script for creating, destroying, and seeding the app's database
 */
class Glpi {

    function __construct($args)
    {
        $this->args = $args;
    }

    function help()
    {
        echo "usage: php " . $this->args[0] . " <command> [<args>]\n";
    }

    function run()
    {
        if (count($this->args) <= 1) {
            $this->help();
        } else {
            switch ($this->args[1]) {
                case "migrate":
                    $this->runMigrations();
                    if (!isset($this->args[2]) || $this->args[2] != '--seed')
                        break;
                case "seed":
                    $this->runSeed();
                    break;
                case "install":
                    $this->runInstall();
                    break;
                case "help":
                case "--help":
                    $this->help();
                    break;
            }
        }
    }

    function runMigrations()
    {
        $files = glob(MIGRATIONS_PATH.'/*.php');

        foreach ($files as $file) {
            require_once($file);

            $name = basename($file, '.php');

            list($number,$class) = explode('_',$name);
            $migration = new $class;
            $migration->run();
        }
    }

    function runSeed()
    {
        $files = glob(SEEDS_PATH.'/*.php');

        foreach ($files as $file) {
            require_once($file);

            $name = basename($file, '.php');
            list($number,$class) = explode('_',$name);
            $migration = new $class;
            $migration->run();
        }
    }


    function runInstall() {

        require_once(INSTALL_PATH.'/install.php');

        $item = new GLPIInstallation();
        $item->run();
    }

}

$glpi = new Glpi($argv);
$glpi->run();
